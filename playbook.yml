########################################################################
# Playbook was tested on Ubuntu 20.04 (focal) minimal install over ssh #
########################################################################

---
- hosts: duvplex
  become: true
  gather_facts: true
  vars_files: ["ansible_vault.yml"]

  tasks:
    - name: Add user and add user to sudoers list
      user:
        name: jonnyparris
        groups: ["sudo"]
        append: yes
        create_home: yes
        shell: /bin/bash
    - name: Add authorized keys
      authorized_key:
        user: jonnyparris
        state: present
        key: "{{ lookup('file', 'key.pub') }}"
    - name: Remove Root SSH Configuration
      file:
        path: /root/.ssh
        state: absent
    - name: Copy a custom ssh banner
      ansible.builtin.copy:
        src: ./assets/ssh_banner.txt
        dest: /etc/ssh/sshd-banner
        owner: root
        group: root
        mode: "0755"
    - name: Copy Secured SSHD Configuration
      copy:
        src: ./ssh_config_secured
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: 0644
    - name: Set a hostname
      ansible.builtin.hostname:
        name: duvplex
    - name: Restart sshd service
      service:
        name: sshd
        state: restarted
    - name: Setup commandline preferences part 1
      ansible.builtin.copy:
        src: "~/dotfiles/{{ item }}"
        dest: "/home/jonnyparris/.{{ item }}"
        owner: jonnyparris
        group: jonnyparris
        mode: "0755"
      with_items:
        - aliases
        - functions
        - zshrc
        - zshenv
      tags: ["zsh"]
    - name: Setup commandline preferences part 2
      ansible.builtin.copy:
        src: "~/.{{ item }}"
        dest: "/home/jonnyparris/{{ item }}"
        owner: jonnyparris
        group: jonnyparris
        mode: "0755"
      with_items:
        - zprofile
        - zimrc
      tags: ["zsh"]
    - name: Create media directories
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - /mnt/data
        - /mnt/data/downloads
        - /mnt/data/media/tv
        - /mnt/data/media/movies
        - /home/jonnyparris/plex
    - name: Create symlinks
      file:
        src: "/mnt/data/{{ item }}"
        dest: "/home/jonnyparris/{{ item }}"
        state: link
      with_items:
        - downloads
        - media
    - name: Install Packages
      apt:
        name: "{{ item }}"
        update_cache: yes
        state: latest
      loop:
        [
          "vim",
          "rsync",
          "wget",
          "apt-transport-https",
          "ca-certificates",
          "curl",
          "gnupg",
          "lsb-release",
          "p7zip-full",
          "python3-pip",
          "intel-gpu-tools",
        ]
      tags: ["install"]
    - name: Get ubuntu version
      command: lsb_release -cs
      register: ubuntu_version
      tags: ["docker"]
    - name: Get system info
      command: uname -s
      register: unameS
      tags: ["docker"]
    - name: Get system info
      command: uname -m
      register: unameM
      tags: ["docker"]
    - name: Add a signing key for docker
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /usr/share/keyrings/docker-archive-keyring.gpg
        state: present
      tags: ["docker"]
    - name: Add docker repository into sources list
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ubuntu_version.stdout }} stable"
        filename: docker.list
        state: present
      tags: ["docker"]
    - name: Install Packages
      apt:
        name: "{{ item }}"
        update_cache: yes
        state: latest
      loop: ["docker-ce", "docker-ce-cli", "containerd.io"]
      tags: ["docker"]
    - name: Add user to docker group
      user:
        name: jonnyparris
        groups: ["docker"]
        append: yes
      tags: ["docker"]
    - name: Install docker-compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/1.28.5/docker-compose-{{ unameS.stdout }}-{{ unameM.stdout }}"
        dest: /usr/local/bin/docker-compose
        mode: "u+x,g+x"
      tags: ["docker"]
    - name: Copy docker compose file over to remote
      ansible.builtin.copy:
        src: docker-compose.yml
        dest: /home/jonnyparris/plex/docker-compose.yml
        owner: jonnyparris
        group: jonnyparris
        mode: "0755"
      tags: ["docker", "compose"]
    - name: Change username in docker compose file
      ansible.builtin.lineinfile:
        path: /home/jonnyparris/plex/docker-compose.yml
        regexp: "^(.*)OPENVPN_USERNAME"
        line: "        - OPENVPN_USERNAME={{ OPENVPN_USERNAME }}"
      tags: ["docker", "compose"]
    - name: Change OpenVPN password in docker compose file
      ansible.builtin.lineinfile:
        path: /home/jonnyparris/plex/docker-compose.yml
        regexp: "^(.*)OPENVPN_PASSWORD"
        line: "        - OPENVPN_PASSWORD={{ OPENVPN_PASSWORD }}"
      tags: ["docker", "compose"]
    - name: Allow all access to some tcp ports
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      with_items: ["22", "7878", "8989", "9091", "32400", "20"]
      tags: ["ufw"]
    - name: Allow all access to some udp ports
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: udp
      with_items: ["32400"]
      tags: ["ufw"]
    - name: Enable UFW
      ufw:
        state: enabled
      tags: ["ufw"]
    - name: Setup dropbox upload system
      get_url:
        url: https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh
        dest: /home/jonnyparris/plex/dropbox_uploader.sh
        owner: jonnyparris
        group: jonnyparris
        mode: "0700"
      tags: ["backup"]
    - name: Setup config backup system
      ansible.builtin.copy:
        src: ./scripts/backup_config.sh
        dest: /home/jonnyparris/plex/backup_config.sh
        owner: jonnyparris
        group: jonnyparris
        mode: "0700"
      tags: ["backup"]
    - name: Change password in backup script
      ansible.builtin.lineinfile:
        path: /home/jonnyparris/plex/backup_config.sh
        regexp: "PASSWORD_7z="
        line: "PASSWORD_7z={{ PASSWORD_7Z }}"
      tags: ["backup"]
    - name: Ensure backup job is once a day
      ansible.builtin.cron:
        name: "backup config"
        minute: "5"
        hour: "18" # 6 'o clock
        job: "/home/jonnyparris/plex/backup_config.sh > /tmp/backup_config.log  2>&1"
      become: yes
      become_user: jonnyparris
      tags: ["backup"]
    - name: Add transmission repository into sources list
      ansible.builtin.apt_repository:
        validate_certs: no
        repo: "ppa:transmissionbt/ppa"
        state: present
      tags: ["transmission"]
    - name: Install transmission remote
      apt:
        update_cache: yes
        name: transmission-cli
      tags: ["transmission"]
    - name: Setup transmission cleanup system
      ansible.builtin.copy:
        src: ./scripts/remove_completed.sh
        dest: /home/jonnyparris/plex/remove_completed.sh
        owner: jonnyparris
        group: jonnyparris
        mode: "0700"
      tags: ["transmission"]
    - name: Ensure transmission cleanup job is run once a day
      ansible.builtin.cron:
        name: "remove completed"
        minute: "7"
        hour: "18" # evening at 6 'O clock
        job: "/home/jonnyparris/plex/remove_completed.sh > /tmp/cleanup_transmission.log  2>&1"
      become: yes
      become_user: jonnyparris
      tags: ["transmission"]
